name: Build Android APK
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    # ✅ .java 파일 경로 확인
    - name: Check java file visibility
      run: |
        echo "=== 🔍 java 파일 경로 확인 ==="
        find android/src -type f -name "*.java" || echo "❌ java 파일 없음"
        if [ -d "android/src/main/java/org/kivy/skkutimetable/doublecheck" ]; then
          echo "✅ java 소스 디렉토리 존재함"
          ls -R android/src/main/java/org/kivy/skkutimetable/doublecheck
        else
          echo "❌ java 소스 디렉토리 없음"
        fi

    # 🔥 NEW: AndroidManifest.tmpl.xml 파일 존재 및 내용 확인
    - name: Check AndroidManifest template file
      run: |
        echo "=== 🔍 AndroidManifest.tmpl.xml 파일 확인 ==="
        echo "현재 디렉토리: $(pwd)"
        echo ""
        echo "--- 모든 manifest 관련 파일 찾기 ---"
        find . -maxdepth 2 -name "*manifest*" -o -name "*Manifest*" | head -10
        echo ""
        echo "--- AndroidManifest.tmpl.xml 존재 여부 ---"
        if [ -f "AndroidManifest.tmpl.xml" ]; then
          echo "✅ AndroidManifest.tmpl.xml 발견!"
          echo "파일 크기: $(wc -c < AndroidManifest.tmpl.xml) bytes"
          echo "파일 권한: $(ls -la AndroidManifest.tmpl.xml)"
          echo ""
          echo "=== 📋 파일 내용 전체 출력 ==="
          cat AndroidManifest.tmpl.xml
          echo ""
          echo "=== 🔍 AlarmReceiver 검색 ==="
          if grep -q "AlarmReceiver" AndroidManifest.tmpl.xml; then
            echo "✅ AlarmReceiver 발견!"
            grep -A 5 -B 2 "AlarmReceiver" AndroidManifest.tmpl.xml
          else
            echo "❌ AlarmReceiver 없음"
          fi
        else
          echo "❌ AndroidManifest.tmpl.xml 파일 없음!"
          echo "루트 디렉토리 파일 목록:"
          ls -la
        fi
        
        echo ""
        echo "=== 🔧 buildozer.spec manifest 설정 확인 ==="
        if [ -f "buildozer.spec" ]; then
          echo "--- manifest 관련 설정들 ---"
          grep -n "manifest" buildozer.spec || echo "manifest 설정 없음"
          echo ""
          echo "--- android.manifest_template 설정 ---"
          grep -n "android.manifest_template" buildozer.spec || echo "android.manifest_template 설정 없음"
        else
          echo "❌ buildozer.spec 파일 없음"
        fi

    # 🔥 NEW: buildozer 매니페스트 템플릿 처리 확인
    - name: Debug buildozer manifest template processing
      run: |
        echo "=== 🔍 buildozer 매니페스트 템플릿 처리 디버깅 ==="
        
        # buildozer.spec에서 매니페스트 관련 설정 상세 확인
        echo "--- buildozer.spec 매니페스트 설정 상세 ---"
        grep -A 3 -B 3 "manifest" buildozer.spec || echo "manifest 설정 없음"

    # 🔥 NEW: 매니페스트 처리 과정 완전 추적
    - name: Deep manifest processing debug
      run: |
        echo "=== 🔍 매니페스트 파일들 존재 확인 ==="
        
        # 1. 소스 매니페스트 파일들 확인
        echo "--- 소스 매니페스트 파일들 ---"        
        if [ -f "android/manifest_additions.xml" ]; then
          echo "✅ android/manifest_additions.xml 존재 ($(wc -c < android/manifest_additions.xml) bytes)"
          echo "AlarmReceiver 포함: $(grep -c "AlarmReceiver" android/manifest_additions.xml)"
        else
          echo "❌ android/manifest_additions.xml 없음"
        fi
        
        # 2. buildozer.spec 설정 확인
        echo ""
        echo "--- buildozer.spec 매니페스트 설정 ---"
        grep -n "android.manifest" buildozer.spec || echo "매니페스트 설정 없음"
        
        # 3. buildozer 버전 및 p4a 버전 확인
        echo ""
        echo "--- buildozer/p4a 버전 정보 ---"
        buildozer --version || echo "buildozer 버전 확인 실패"


    # ✅ Java 17 세팅
    - name: Set up Java 17 for buildozer
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    # ✅ 시스템 종속 패키지 설치
    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          git zip unzip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake \
          libffi-dev libssl-dev build-essential libsqlite3-dev sqlite3 \
          bzip2 libbz2-dev libreadline-dev llvm \
          xz-utils tk-dev libxml2-dev libxmlsec1-dev liblzma-dev \
          libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
          libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev \
          libfreetype6-dev libpng-dev libjpeg-dev

    # ✅ 파이썬 의존성 설치
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
        pip install Cython==0.29.33
        pip install buildozer==1.5.0

    # ✅ 환경 변수 설정
    - name: Set environment variables
      run: |
        echo "P4A_NUM_PROCS=1" >> $GITHUB_ENV
        echo "GRADLE_OPTS=-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx3072m -XX:MaxMetaspaceSize=768m' -Dorg.gradle.parallel=false" >> $GITHUB_ENV
        echo "P4A_GRADLE_OPTS=--stacktrace --info" >> $GITHUB_ENV

    # ✅ 클린 빌드
    - name: Complete clean build
      run: |
        echo "=== Completely cleaning build environment ==="
        rm -rf .buildozer
        rm -rf bin
        rm -rf ~/.buildozer
        rm -rf ~/.gradle
        rm -rf ~/.android

    # 🔥 NEW: 빌드 전 최종 파일 확인
    - name: Final pre-build verification
      run: |
        echo "=== 🔍 빌드 전 최종 확인 ==="
        echo "현재 디렉토리:"
        pwd
        echo "파일 목록:"
        ls -la
        echo "AndroidManifest.tmpl.xml 존재 여부:"
        [ -f "AndroidManifest.tmpl.xml" ] && echo "✅ 존재" || echo "❌ 없음"
        echo "buildozer.spec 설정:"
        grep "android.manifest_template" buildozer.spec || echo "android.manifest_template 설정 없음"

    # ✅ 빌드 수행 및 로그 저장
    - name: Build APK
      run: |
        echo "=== Build start ==="
        buildozer android debug --verbose > build_full.log 2>&1 || BUILD_FAILED=true
        if [ "$BUILD_FAILED" = "true" ]; then
          echo "❌ 빌드 실패!"
          echo "=== 빌드 로그 마지막 100줄 ==="
          tail -100 build_full.log
          echo "=== AndroidManifest 관련 로그 검색 ==="
          grep -i "manifest" build_full.log | tail -20 || echo "manifest 관련 로그 없음"
          exit 1
        else
          echo "✅ 빌드 성공!"
        fi

    # 🔍 NEW: APK 디컴파일 및 AlarmReceiver 확인
    - name: Decompile APK and check AlarmReceiver
      run: |
        echo "=== 🔍 apktool 설치 ==="
        sudo apt-get install -y apktool

        echo "=== 📦 apk 디컴파일 중 ==="
        apktool d bin/*.apk -o decoded_apk || echo "❌ apktool 실패"

        echo ""
        echo "=== 🔍 AndroidManifest.xml 내 AlarmReceiver 확인 ==="
        if [ -f "decoded_apk/AndroidManifest.xml" ]; then
          grep -A 5 -B 2 "AlarmReceiver" decoded_apk/AndroidManifest.xml || echo "❌ AlarmReceiver 없음"
        else
          echo "❌ decoded_apk/AndroidManifest.xml 없음"
        fi

        echo ""
        echo "=== 🔍 AlarmReceiver 클래스(smali) 존재 확인 ==="
        find decoded_apk/smali -type f -name "*AlarmReceiver*.smali" || echo "❌ AlarmReceiver 클래스 없음"

    # 🔥 NEW: 빌드 후 생성된 AndroidManifest.xml 확인
    - name: Check generated AndroidManifest.xml
      if: always()
      run: |
        echo "=== 🔍 생성된 AndroidManifest.xml 확인 ==="
        echo "모든 AndroidManifest.xml 파일 찾기:"
        find .buildozer -name "AndroidManifest.xml" 2>/dev/null || echo "AndroidManifest.xml 없음"
        
        echo ""
        echo "=== 🔍 주요 매니페스트 파일들 직접 확인 ==="
        
        # 주요 매니페스트 파일들 목록
        MAIN_MANIFESTS=(
          ".buildozer/android/platform/build-arm64-v8a/dists/doublecheck/src/main/AndroidManifest.xml"
          ".buildozer/android/platform/build-arm64-v8a/dists/doublecheck/AndroidManifest.xml"
          ".buildozer/android/platform/build-arm64-v8a/dists/doublecheck/build/intermediates/merged_manifests/debug/AndroidManifest.xml"
        )
        
        for manifest in "${MAIN_MANIFESTS[@]}"; do
          if [ -f "$manifest" ]; then
            echo ""
            echo "📋 매니페스트 파일: $manifest"
            echo "파일 크기: $(wc -c < "$manifest") bytes"
            
            echo "--- 패키지 정보 ---"
            grep "package=" "$manifest" | head -1 || echo "패키지 정보 없음"
            
            echo "--- AlarmReceiver 검색 ---"
            if grep -q "AlarmReceiver" "$manifest"; then
              echo "✅ AlarmReceiver 발견!"
              grep -A 5 -B 2 "AlarmReceiver" "$manifest"
            else
              echo "❌ AlarmReceiver 없음"
            fi
            
            echo "--- receiver 태그 검색 ---"
            receiver_count=$(grep -c "<receiver" "$manifest" 2>/dev/null || echo "0")
            echo "receiver 개수: $receiver_count"
            if [ "$receiver_count" -gt 0 ]; then
              grep -A 2 "<receiver" "$manifest"
            fi
            
            echo "--- application 구조 ---"
            echo "application 태그: $(grep -c '<application' "$manifest" 2>/dev/null || echo "0")"
            echo "activity 태그: $(grep -c '<activity' "$manifest" 2>/dev/null || echo "0")"
          else
            echo "❌ 파일 없음: $manifest"
          fi
        done
        
        echo ""
        echo "=== 🔍 빌드 과정 중 매니페스트 변화 추적 ==="
        
        # buildozer가 생성하는 초기 매니페스트 확인
        INITIAL_MANIFEST=".buildozer/android/platform/build-arm64-v8a/dists/doublecheck/templates/AndroidManifest.tmpl"
        if [ -f "$INITIAL_MANIFEST" ]; then
          echo "✅ buildozer 생성 초기 템플릿: $INITIAL_MANIFEST"
          grep -q "AlarmReceiver" "$INITIAL_MANIFEST" && echo "  → AlarmReceiver 포함됨" || echo "  → AlarmReceiver 없음"
        else
          echo "❌ buildozer 초기 템플릿 없음"
        fi
        
        # 최종 앱 매니페스트 확인
        APP_MANIFEST=".buildozer/android/platform/build-arm64-v8a/dists/doublecheck/AndroidManifest.xml"
        if [ -f "$APP_MANIFEST" ]; then
          echo "✅ 최종 앱 매니페스트: $APP_MANIFEST"
          grep -q "AlarmReceiver" "$APP_MANIFEST" && echo "  → AlarmReceiver 포함됨" || echo "  → AlarmReceiver 없음"
        else
          echo "❌ 최종 앱 매니페스트 없음"
        fi
        
        # gradle이 처리하는 최종 매니페스트 확인
        FINAL_MANIFEST=".buildozer/android/platform/build-arm64-v8a/dists/doublecheck/build/intermediates/merged_manifests/debug/AndroidManifest.xml" 
        if [ -f "$FINAL_MANIFEST" ]; then
          echo "✅ gradle 최종 매니페스트: $FINAL_MANIFEST"
          grep -q "AlarmReceiver" "$FINAL_MANIFEST" && echo "  → AlarmReceiver 포함됨" || echo "  → AlarmReceiver 없음"
          echo "  → 패키지명: $(grep 'package=' "$FINAL_MANIFEST" | cut -d'"' -f2)"
        else
          echo "❌ gradle 최종 매니페스트 없음"
        fi

    # ✅ 빌드 로그 업로드
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          build_full.log
          .buildozer/**/*.log
          .buildozer/**/AndroidManifest.xml
        retention-days: 30
        if-no-files-found: warn

    # ✅ APK 업로드
    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: skku-timetable-apk
        path: bin/*.apk
        retention-days: 7
        if-no-files-found: error

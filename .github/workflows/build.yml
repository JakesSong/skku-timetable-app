name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 수동 실행 허용

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Cache buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('**/.buildozer/') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
          
    - name: Cache buildozer directory in project
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-project-${{ hashFiles('.buildozer/') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-project-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-8-jdk python3-pip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake \
          libffi-dev libssl-dev build-essential libsqlite3-dev sqlite3 \
          bzip2 libbz2-dev zlib1g-dev libreadline-dev llvm libncurses5-dev \
          xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \
          libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
          libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev \
          libfreetype6-dev libpng-dev libjpeg-dev
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Cython==0.29.33
        pip install buildozer==1.5.0
        
    - name: Create buildozer.spec if not exists
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        
    - name: Update buildozer.spec for GitHub Actions
      run: |
        # buildozer.spec 파일 업데이트
        sed -i 's/^#*requirements = .*/requirements = python3==3.10.0,kivy==2.1.0,kivymd==1.1.1,plyer,pyjnius,android/' buildozer.spec
        sed -i 's/^#*android.permissions = .*/android.permissions = INTERNET,WAKE_LOCK,RECEIVE_BOOT_COMPLETED,VIBRATE,FOREGROUND_SERVICE/' buildozer.spec
        sed -i 's/^#*android.api = .*/android.api = 33/' buildozer.spec
        sed -i 's/^#*android.minapi = .*/android.minapi = 21/' buildozer.spec
        sed -i 's/^#*android.ndk = .*/android.ndk = 25b/' buildozer.spec
        sed -i 's/^#*android.accept_sdk_license = .*/android.accept_sdk_license = True/' buildozer.spec
        sed -i 's/^#*android.archs = .*/android.archs = arm64-v8a, armeabi-v7a/' buildozer.spec
        
    - name: Build with Buildozer
      run: |
        # 메모리 사용량 최적화를 위한 환경 변수 설정
        export P4A_NUM_PROCS=2
        export GRADLE_OPTS="-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2048m -Xms512m'"
        
        # 빌드 실행
        yes | buildozer android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 30
        
    - name: List built files
      run: |
        echo "Built files:"
        ls -la bin/
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Build Android APK with Direct p4a
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          git zip unzip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake \
          libffi-dev libssl-dev build-essential libsqlite3-dev sqlite3 \
          bzip2 libbz2-dev libreadline-dev llvm \
          xz-utils tk-dev libxml2-dev libxmlsec1-dev liblzma-dev \
          openjdk-17-jdk-headless \
          libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
          libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev \
          libfreetype6-dev libpng-dev libjpeg-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
        pip install Cython==0.29.33
        # p4a 직접 설치 (최신 버전 사용)
        pip install python-for-android==2024.1.21
        pip install kivy==2.1.0
        pip install kivymd==1.1.1
    
    - name: Setup Android SDK and NDK
      run: |
        # Android SDK 설치
        mkdir -p ~/.android
        cd ~/.android
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip commandlinetools-linux-9477386_latest.zip
        mkdir -p sdk/cmdline-tools
        mv cmdline-tools sdk/cmdline-tools/latest
        
        export ANDROID_SDK_ROOT=~/.android/sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin
        
        # SDK 컴포넌트 설치
        yes | sdkmanager --licenses
        sdkmanager "platforms;android-33" "build-tools;32.0.0" "ndk;25.2.9519653"
        
        # 환경변수 설정
        echo "ANDROID_SDK_ROOT=~/.android/sdk" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=~/.android/sdk/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "PATH=$PATH:~/.android/sdk/cmdline-tools/latest/bin:~/.android/sdk/platform-tools" >> $GITHUB_ENV
    
    - name: Create p4a build script
      run: |
        cat > build_with_p4a.py << 'EOF'
        #!/usr/bin/env python3
        import os
        import sys
        import subprocess
        import shutil
        
        # 환경변수 설정
        os.environ['ANDROID_SDK_ROOT'] = os.path.expanduser('~/.android/sdk')
        os.environ['ANDROID_NDK_ROOT'] = os.path.expanduser('~/.android/sdk/ndk/25.2.9519653')
        os.environ['JAVA_HOME'] = '/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.15-6/x64'
        
        # p4a 명령어 구성
        cmd = [
            'p4a', 'apk',
            '--private', '.',
            '--package', 'org.kivy.skkutimetable.doublecheck',
            '--name', 'DoubleCheck',
            '--version', '0.1',
            '--bootstrap', 'sdl2',
            '--requirements', 'python3,kivy==2.1.0,kivymd==1.1.1,requests,pillow,certifi,urllib3,charset-normalizer,plyer,sqlite3',
            '--permissions', 'INTERNET,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE,SCHEDULE_EXACT_ALARM,USE_EXACT_ALARM,VIBRATE,WAKE_LOCK,RECEIVE_BOOT_COMPLETED,FOREGROUND_SERVICE,POST_NOTIFICATIONS,ACCESS_NOTIFICATION_POLICY',
            '--arch', 'arm64-v8a',
            '--release',
            # 🔥 핵심: 커스텀 매니페스트 및 Java 소스 추가
            '--add-source', 'android/src/main/java',
            '--add-jar', 'android/libs/alarmreceiver.jar',
        ]
        
        # AndroidManifest.tmpl.xml이 있으면 추가
        if os.path.exists('AndroidManifest.tmpl.xml'):
            cmd.extend(['--manifest-template', 'AndroidManifest.tmpl.xml'])
            print("✅ AndroidManifest.tmpl.xml 사용")
        else:
            print("❌ AndroidManifest.tmpl.xml 없음")
        
        print("🚀 p4a 명령어:")
        print(' '.join(cmd))
        
        # p4a 실행
        try:
            result = subprocess.run(cmd, capture_output=True, text=True)
            print("📋 p4a stdout:")
            print(result.stdout)
            if result.stderr:
                print("⚠️ p4a stderr:")
                print(result.stderr)
            
            if result.returncode != 0:
                print(f"❌ p4a 실패, 종료 코드: {result.returncode}")
                sys.exit(1)
            else:
                print("✅ p4a 빌드 성공!")
                
        except Exception as e:
            print(f"❌ p4a 실행 오류: {e}")
            sys.exit(1)
        
        EOF
        
        chmod +x build_with_p4a.py
    
    - name: Check required files
      run: |
        echo "=== 🔍 필수 파일 확인 ==="
        echo "AndroidManifest.tmpl.xml: $([ -f "AndroidManifest.tmpl.xml" ] && echo "✅" || echo "❌")"
        echo "android/libs/alarmreceiver.jar: $([ -f "android/libs/alarmreceiver.jar" ] && echo "✅" || echo "❌")"
        echo "Java 소스:"
        find android/src -name "*.java" || echo "❌ Java 파일 없음"
    
    - name: Build APK with p4a
      run: |
        python build_with_p4a.py
    
    - name: Check generated APK and manifest
      run: |
        echo "=== 🔍 생성된 APK 확인 ==="
        find . -name "*.apk" -type f
        
        echo ""
        echo "=== 🔍 p4a 생성 매니페스트 확인 ==="
        P4A_DIST=$(find ~/.local/share/python-for-android/dists -name "*doublecheck*" -type d | head -1)
        if [ -n "$P4A_DIST" ]; then
          echo "p4a dist 디렉토리: $P4A_DIST"
          MANIFEST="$P4A_DIST/AndroidManifest.xml"
          if [ -f "$MANIFEST" ]; then
            echo "✅ p4a 매니페스트 발견: $MANIFEST"
            echo "AlarmReceiver 포함: $(grep -c "AlarmReceiver" "$MANIFEST" || echo "0")"
            if grep -q "AlarmReceiver" "$MANIFEST"; then
              echo "🎉 AlarmReceiver 등록됨!"
              grep -A 5 -B 2 "AlarmReceiver" "$MANIFEST"
            else
              echo "❌ AlarmReceiver 여전히 없음"
            fi
          else
            echo "❌ p4a 매니페스트 없음"
          fi
        else
          echo "❌ p4a dist 디렉토리 없음"
        fi
    
    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: p4a-direct-build-apk
        path: "*.apk"
        retention-days: 7
        if-no-files-found: warn

name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Set up Java 17 for buildozer
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          git zip unzip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake \
          libffi-dev libssl-dev build-essential libsqlite3-dev sqlite3 \
          bzip2 libbz2-dev libreadline-dev llvm \
          xz-utils tk-dev libxml2-dev libxmlsec1-dev liblzma-dev \
          libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
          libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev \
          libfreetype6-dev libpng-dev libjpeg-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
        pip install Cython==0.29.33
        pip install buildozer==1.5.0
        
    - name: Set environment variables
      run: |
        echo "P4A_NUM_PROCS=1" >> $GITHUB_ENV
        echo "GRADLE_OPTS=-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx3072m -XX:MaxMetaspaceSize=768m' -Dorg.gradle.parallel=false" >> $GITHUB_ENV
        echo "P4A_GRADLE_OPTS=--stacktrace --info" >> $GITHUB_ENV
        
    - name: Complete clean build
      run: |
        echo "=== Completely cleaning build environment ==="
        rm -rf .buildozer
        rm -rf bin
        rm -rf ~/.buildozer
        rm -rf ~/.gradle
        rm -rf ~/.android
        
    - name: Verify buildozer.spec and main files
      run: |
        echo "=== Checking current files ==="
        ls -la
        
        echo "=== buildozer.spec content ==="
        if [ -f "buildozer.spec" ]; then
          cat buildozer.spec
        else
          echo "No buildozer.spec found!"
        fi
        
        echo "=== main.py content ==="
        if [ -f "main.py" ]; then
          echo "main.py exists:"
          head -20 main.py
        else
          echo "No main.py found!"
        fi
        
        echo "=== main_simple.py content ==="
        if [ -f "main_simple.py" ]; then
          echo "main_simple.py exists:"
          head -10 main_simple.py
        else
          echo "No main_simple.py found!"
        fi
    
    - name: Build APK (force rebuild with Java src)
      run: |
        echo "=== Forcing full rebuild ==="
        rm -rf .buildozer bin
        mkdir -p .buildozer
        touch buildozer.spec
        buildozer android debug --verbose
          
    - name: Check build results
      run: |
        echo "=== Build Results ==="
        ls -la
        
        if [ -d "bin" ]; then
          echo "=== APK files ==="
          ls -la bin/
          for apk in bin/*.apk; do
            if [ -f "$apk" ]; then
              echo "APK file: $apk"
              file "$apk"
              echo "APK size: $(du -h "$apk")"
            fi
          done
        else
          echo "No bin directory found - build may have failed"
        fi
        
    - name: Check build logs on failure
      if: failure()
      run: |
        echo "=== Checking build logs ==="
        find .buildozer -name "*.log" -type f -exec echo "=== {} ===" \; -exec head -50 {} \; || true
        
        echo "=== Last 100 lines of build output ==="
        find .buildozer -name "*.log" -type f -exec tail -100 {} \; || true
        
    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: skku-timetable-apk
        path: bin/*.apk
        retention-days: 7
        if-no-files-found: error

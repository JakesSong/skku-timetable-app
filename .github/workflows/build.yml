name: Build and Modify APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-and-modify:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 34.0.0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip zip openjdk-11-jdk wget xxd
        pip install buildozer cython kivy

    - name: Build APK
      run: |
        echo "Building APK with buildozer..."
        
        if [ -f "buildozer.spec" ]; then
          echo "Found buildozer.spec"
        else
          echo "Creating basic buildozer.spec"
          buildozer init
        fi
        
        buildozer android debug
        
        BUILT_APK=$(find bin -name "*.apk" | head -1)
        if [ -n "$BUILT_APK" ]; then
          echo "APK built: $BUILT_APK"
          cp "$BUILT_APK" original.apk
        else
          echo "Build failed"
          exit 1
        fi

    - name: Analyze APK
      run: |
        echo "Analyzing original APK..."
        
        if [ -f "original.apk" ]; then
          echo "APK size: $(du -h original.apk | cut -f1)"
          
          # 매니페스트 확인
          unzip -j original.apk AndroidManifest.xml
          echo "Manifest size: $(wc -c < AndroidManifest.xml) bytes"
          
          # 현재 구조 확인
          aapt dump badging original.apk | head -5
          echo "Current receiver count:"
          aapt dump xmltree original.apk AndroidManifest.xml | grep -c "receiver" || echo "0"
        fi

    - name: Modify with aapt2
      run: |
        echo "Modifying APK with aapt2..."
        
        mkdir -p work
        cd work
        cp ../original.apk .
        
        # APK 압축 해제
        unzip -q original.apk
        
        # 새 매니페스트 생성
        cat > new_manifest.xml << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="org.kivy.skkutimetable.doublecheck"
    android:versionCode="10211"
    android:versionName="0.1">
    
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    
    <application android:label="DoubleCheck" android:icon="@mipmap/icon">
        <activity android:name="org.kivy.android.PythonActivity"
                  android:label="DoubleCheck"
                  android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        
        <service android:name="org.kivy.android.PythonService" />
        
        <receiver android:name="org.kivy.skkutimetable.doublecheck.AlarmReceiver"
                  android:enabled="true"
                  android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>
        
    </application>
</manifest>
EOF
        
        # 리소스 디렉토리 준비
        mkdir -p temp_res/values
        echo '<?xml version="1.0" encoding="utf-8"?><resources></resources>' > temp_res/values/strings.xml
        
        # 기존 리소스 복사
        if [ -d "res" ]; then
          cp -r res/* temp_res/ 2>/dev/null || true
        fi
        
        # aapt로 새 APK 생성
        echo "Creating new APK with aapt..."
        aapt package -f -M new_manifest.xml -S temp_res -I "$ANDROID_HOME/platforms/android-33/android.jar" -F new.apk
        
        if [ -f "new.apk" ]; then
          echo "New APK created successfully"
          
          # 새 매니페스트 추출
          unzip -j new.apk AndroidManifest.xml -d .
          
          # 원본 APK에 새 매니페스트 삽입
          cp original.apk modified.apk
          zip -u modified.apk AndroidManifest.xml
          
          echo "Modified APK created"
          
          # 검증
          if aapt dump badging modified.apk >/dev/null 2>&1; then
            echo "SUCCESS: Modified APK is valid"
            aapt dump badging modified.apk | head -3
            echo "Receiver count:"
            aapt dump xmltree modified.apk AndroidManifest.xml | grep -c "receiver" || echo "0"
          else
            echo "FAILED: Modified APK is invalid"
          fi
        else
          echo "Failed to create new APK"
        fi
        
        cd ..

    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: apk-results
        path: |
          original.apk
          work/modified.apk
        retention-days: 7

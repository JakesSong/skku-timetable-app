name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          python3 \
          python3-dev \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0-0 \
          libgstreamer1.0-dev \
          libunwind-dev \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          openjdk-17-jdk \
          unzip \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 8512546
        packages: "platforms;android-33 build-tools;32.0.0 platform-tools ndk;25.2.9519653"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install kivy==2.1.0
        pip install kivymd==1.1.1
        pip install buildozer==1.5.0
        pip install cython==0.29.33
        pip install requests beautifulsoup4

    - name: Debug buildozer initialization
      run: |
        echo "🔧 === BUILDOZER DEBUG ==="
        echo "📋 Buildozer version and info:"
        buildozer version || echo "Buildozer version command not available"
        pip show buildozer
        
        echo -e "\n📱 Android SDK packages:"
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --list_installed
        
        echo -e "\n🔍 Checking if .buildozer exists (first time setup):"
        if [ -d .buildozer/android/platform/python-for-android ]; then
          echo "✅ python-for-android directory exists, safe to clean"
          buildozer android clean
        else
          echo "⚠️ First time build - skipping clean (python-for-android not yet downloaded)"
        fi
        
        echo -e "\n📋 Buildozer help (available commands):"
        buildozer help || echo "Help command failed"

    - name: Debug project structure and files
      run: |
        echo "🔍 === PROJECT STRUCTURE DEBUG ==="
        echo "📁 Root directory contents:"
        ls -la
        
        echo -e "\n📁 Checking xml directory:"
        if [ -d xml ]; then
          echo "✅ xml directory exists"
          ls -la xml/
          if [ -f xml/receivers.xml ]; then
            echo "✅ receivers.xml exists"
            echo "📄 receivers.xml content:"
            cat xml/receivers.xml
          else
            echo "❌ receivers.xml NOT found"
          fi
        else
          echo "❌ xml directory NOT found"
        fi
        
        echo -e "\n📄 buildozer.spec relevant sections:"
        echo "🔧 Extra manifest arguments:"
        grep -n "android.extra_manifest_application_arguments" buildozer.spec || echo "❌ No extra manifest arguments found"
        echo "🔧 Android permissions:"
        grep -n "android.permissions" buildozer.spec || echo "❌ No permissions found"
        echo "🔧 Java source path:"
        grep -n "android.add_src" buildozer.spec || echo "❌ No Java source path found"
        
        echo -e "\n📁 Checking Java source directory:"
        if [ -d android/src/main/java ]; then
          echo "✅ Java source directory exists"
          find android/src/main/java -name "*.java" -type f || echo "No Java files found"
        else
          echo "❌ Java source directory NOT found"
        fi
        
        echo -e "\n🐍 Python version and buildozer info:"
        python --version
        buildozer version
        
        echo -e "\n🔧 Environment variables:"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        echo "ANDROID_HOME: $ANDROID_HOME"

    - name: Clean previous builds
      run: |
        echo "Cleaning previous builds..."
        rm -rf .buildozer
        rm -rf bin

    - name: Verify project structure and configuration
      run: |
        echo "🔍 === PROJECT VERIFICATION ==="
        echo "📁 Root directory contents:"
        ls -la
        
        echo -e "\n📁 Checking xml directory:"
        if [ -d xml ]; then
          echo "✅ xml directory exists"
          ls -la xml/
          if [ -f xml/receivers.xml ]; then
            echo "✅ receivers.xml exists"
            echo "📄 receivers.xml content:"
            cat xml/receivers.xml
          else
            echo "❌ receivers.xml NOT found"
          fi
        else
          echo "❌ xml directory NOT found"
        fi
        
        echo -e "\n📄 buildozer.spec relevant sections:"
        echo "🔧 Extra manifest entry:"
        grep -n "android.extra_manifest_application_entry" buildozer.spec || echo "❌ No extra manifest entry found"
        echo "🔧 Android permissions:"
        grep -n "android.permissions" buildozer.spec || echo "❌ No permissions found"
        echo "🔧 Java source path:"
        grep -n "android.add_src" buildozer.spec || echo "❌ No Java source path found"
        
        echo -e "\n📁 Checking Java source directory:"
        if [ -d android/src/main/java ]; then
          echo "✅ Java source directory exists"
          find android/src/main/java -name "*.java" -type f || echo "No Java files found"
        else
          echo "❌ Java source directory NOT found"
        fi

    - name: Build APK with Buildozer (Enhanced Debug)
      run: |
        echo "🚀 === BUILDING APK ==="
        echo "⏰ Build started at: $(date)"
        
        echo -e "\n📝 Final buildozer.spec check:"
        echo "Last 20 lines of buildozer.spec:"
        tail -20 buildozer.spec
        
        echo -e "\n🔨 Starting buildozer build (fresh build, no clean needed)..."
        buildozer android debug --verbose
        
        echo -e "\n✅ Build completed at: $(date)"
      timeout-minutes: 50

    - name: Debug build results and find APK
      if: always()
      run: |
        echo "📱 === BUILD RESULTS DEBUG ==="
        
        echo "📁 bin directory:"
        if [ -d bin ]; then
          ls -la bin/
        else
          echo "❌ bin directory not found"
        fi
        
        echo -e "\n🔍 Searching for ALL APK files:"
        find . -name "*.apk" -type f -exec ls -lh {} \; 2>/dev/null || echo "❌ No APK files found anywhere"
        
        echo -e "\n📁 .buildozer structure:"
        if [ -d .buildozer ]; then
          echo "✅ .buildozer exists"
          find .buildozer -name "*.apk" -type f -exec ls -lh {} \; 2>/dev/null || echo "❌ No APK in .buildozer"
          
          echo -e "\n📄 Build logs locations:"
          find .buildozer -name "*.log" -type f | head -5
          
          echo -e "\n📁 Dist directory structure:"
          find .buildozer -path "*dists*" -type d | head -10
        else
          echo "❌ .buildozer directory not found"
        fi
        
        echo -e "\n💾 Disk usage:"
        df -h
        echo -e "\n📊 Directory sizes:"
        du -sh .buildozer bin 2>/dev/null || echo "Could not check directory sizes"

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: ./bin/*.apk
        if-no-files-found: warn

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: detailed-build-logs
        path: |
          ./.buildozer/android/platform/build-*/logs/
          ./.buildozer/**/gradlew.log
          ./.buildozer/**/build.log  
          ./.buildozer/**/*.log
        if-no-files-found: ignore

    - name: Upload debug info on failure  
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: debug-info
        path: |
          ./buildozer.spec
          ./xml/receivers.xml
        if-no-files-found: ignore
